{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.11.0.0",
        "fileVersion": "4.11.0-3.24365.8 (9e9c7c1d)",
        "semanticVersion": "4.11.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'entity' in 'Task Repository<T>.DeleteAsync(T entity)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/Repository.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 31,
                  "endLine": 20,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/Repository.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 20,
                  "endLine": 42,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/Repository.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 20,
                  "endLine": 47,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1939",
          "level": "warning",
          "message": "'IUnitOfWork' implements 'IDisposable' so 'IDisposable' can be removed from the inheritance list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/UnityOfWork.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 42,
                  "endLine": 10,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "redundantIndex": "1"
            }
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'DbContext' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/UnityOfWork.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 55,
                  "endLine": 20,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method .ctor passes 'DbContext' as the paramName argument to a ArgumentNullException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/UnityOfWork.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 55,
                  "endLine": 20,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1513",
          "level": "note",
          "message": "Use 'ObjectDisposedException.ThrowIf' instead of explicitly throwing a new exception instance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/UnityOfWork.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 67
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/UnityOfWork.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endLine": 26,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1513",
          "level": "note",
          "message": "Use 'ObjectDisposedException.ThrowIf' instead of explicitly throwing a new exception instance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/UnityOfWork.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 13,
                  "endLine": 71,
                  "endColumn": 67
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/UnityOfWork.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 17,
                  "endLine": 70,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6667",
          "level": "warning",
          "message": "Logging in a catch clause should pass the caught exception as a parameter.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/UnityOfWork.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 25,
                  "endLine": 57,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/UnityOfWork.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 17,
                  "endLine": 42,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/UnityOfWork.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 13,
                  "endLine": 40,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Merge this if statement with its nested one."
            }
          }
        },
        {
          "ruleId": "S2629",
          "level": "warning",
          "message": "Don't use string interpolation in logging message templates.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Dima/dmwebplatform_git/DmWebPlatform.Notifications.Infrastructure/UnityOfWork.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 35,
                  "endLine": 57,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1513": {
          "id": "CA1513",
          "shortDescription": "Use ObjectDisposedException throw helper",
          "fullDescription": "Throw helpers are simpler and more efficient than an if block constructing a new exception instance.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1513",
          "properties": {
            "category": "Maintainability",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2208": {
          "id": "CA2208",
          "shortDescription": "Instantiate argument exceptions correctly",
          "fullDescription": "A call is made to the default (parameterless) constructor of an exception type that is or derives from ArgumentException, or an incorrect string argument is passed to a parameterized constructor of an exception type that is or derives from ArgumentException.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2208",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8603": {
          "id": "CS8603",
          "shortDescription": "Possible null reference return.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8603)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Mergeable \"if\" statements should be combined",
          "fullDescription": "Nested code - blocks of code inside blocks of code - is eventually necessary, but increases complexity. This is why keeping the code as flat as possible, by avoiding unnecessary nesting, is considered a good practice.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1939": {
          "id": "S1939",
          "shortDescription": "Inheritance list should not be redundant",
          "fullDescription": "An inheritance list entry is redundant if:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1939",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2629": {
          "id": "S2629",
          "shortDescription": "Logging templates should be constant",
          "fullDescription": "Logging arguments should not require evaluation in order to avoid unnecessary performance overhead. When passing concatenated strings or string interpolations directly into a logging method, the evaluation of these expressions occurs every time the logging method is called, regardless of the log level. This can lead to inefficient code execution and increased resource consumption.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2629",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3928": {
          "id": "S3928",
          "shortDescription": "Parameter names used into ArgumentException constructors should match an existing one ",
          "fullDescription": "Some constructors of the ArgumentException, ArgumentNullException, ArgumentOutOfRangeException and DuplicateWaitObjectException classes must be fed with a valid parameter name. This rule raises an issue in two cases:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3928",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6667": {
          "id": "S6667",
          "shortDescription": "Logging in a catch clause should pass the caught exception as a parameter.",
          "fullDescription": "This rule raises an issue on logging calls inside a catch clause that does not pass the raised Exception.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6667",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}